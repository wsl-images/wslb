name: Release

on:
  pull_request:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Run Linter
        run: go vet ./...

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code (Full History)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set VERSION Variable
        run: |
          # Extract version by stripping "refs/heads/release/" prefix
          VERSION=${GITHUB_REF#refs/heads/release/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to $VERSION"

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"


      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BUCKET_REPO_TOKEN: ${{ secrets.BUCKET_REPO_TOKEN }}
          CREATE_CHANGELOG: false


      - name: Merge Release Branch into master
        run: |
          git fetch origin master
          git checkout master
          git pull origin master
          git merge --no-ff "${GITHUB_REF}" -m "Merge release ${VERSION} into master"
          git push origin master

      - name: Merge master back into develop
        run: |
          git fetch origin develop
          git checkout develop
          git pull origin develop
          git merge --no-ff master -m "Merge master into develop after release ${VERSION}"
          git push origin develop
